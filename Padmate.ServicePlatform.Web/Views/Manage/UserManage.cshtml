@using Padmate.ServicePlatform.Utility;
@using Padmate.ServicePlatform.Models;
@{
    ViewBag.Title = "用户管理";
    var loginUser = (M_User)ViewData["LoginUser"];


    var isSystemAdmin = "false";
    if(loginUser.Roles != null)
    {
        var sysAdminRole = loginUser.Roles.Where(r => r.Name == SystemRole.SystemAdmin).ToList();
        if(sysAdminRole.Count()>0)
        {
            isSystemAdmin = "true";
        }
    }
}


<section>
    <div class="container">
        <div class="row">
            <div class="col-xs-4 col-is-4 col-sm-2 col-md-2 setting-left">
                @Html.Partial("_SystemManageLeftMenu")
            </div>
            <div class="col-xs-8 col-is-8 col-sm-10 col-md-10">

                <div id="toolbar">
                    <button id="btnAdd" class="btn btn-primary">
                        <i class="glyphicon glyphicon-plus"></i>Add
                    </button>
                    <button id="btnEdit" class="btn btn-success">
                        <i class="glyphicon glyphicon-plus"></i>Edit
                    </button>
                    <button id="btnDelete" class="btn btn-danger">
                        <i class="glyphicon glyphicon-remove"></i> Delete
                    </button>
                </div>
                <table id="table"></table>

            </div>
        </div>


    </div>
</section>

<!--#region新增-->
<div class="curd-model modal fade" id="useradd" user="dialog"
     data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog mediu-modal">
        <div class="modal-content mediu-modal-content">
            <div id="divAddContainer"></div>
        </div>
    </div>

</div>

<!--#endregion 修改-->
<!--#region修改-->
<div class="curd-model modal fade" id="useredit" user="dialog"
     data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog mediu-modal">
        <div class="modal-content mediu-modal-content">
            <div id="divEditContainer"></div>
        </div>
    </div>

</div>

<!--Script要放在HTML标签后，才能将值绑定到标签-->
<script type="text/javascript">

    var dicUserType = $.parseJSON('@Html.Raw(ViewData["UserType"])');
    var dicRoles = $.parseJSON('@Html.Raw(ViewData["Roles"])');

    $(document).ready(function () {
        InitTable();
        InitToolBarButton();
        InitModalEvent();
    });
    function InitTable() {
        $('#table').bootstrapTable({
            height: 500,
            method: 'post',                 //The method type to request remote data.
            url: '/User/User/GetPageData',
            dataType: "json",               //The type of data that you are expecting back from the server.
            contentType: 'application/json',
            pagination: true,               //True to show a pagination toolbar on table bottom.
            pageSize: 10,                   //初始化每页显示几条
            pageNumber: 1,                   //初始化在第几页
            pageList: [10, 25, 50, 100, 200, 'All'],
            sidePagination: "server",       //服务端请求
            idField: 'Id',
            toolbar: '#toolbar',
            showRefresh: true,
            search: true,
            clickToSelect: true,     //单击行选中数据
            queryParams: ConstructQueryParams,
            //queryParamsType: "limit",
            locale: 'en-US',
            columns: [{
                checkbox: true
            },
            {
                field: 'Id',
                title: 'Id',
                visible: false,
            },
            {
                field: 'UserName',
                title: '用户名称',
                sortable: true

            },
            {
                field: 'Roles',
                title: '所属角色',
                formatter: function (value, row, index) {

                    var rolesHtml = "";
                    var roles = row.Roles;
                    if (roles != null && roles.length > 0) {
                        for (var i = 0; i < roles.length; i++) {

                            var roleName = DicRoles(roles[i].Name);
                            rolesHtml += roleName + "<br/>";

                        }

                    }
                    return rolesHtml;
                },

            },
            {
                field: 'UserType',
                title: '用户类型',
                formatter: function (value, row, index) {

                    return DicUserType(value);;
                },

            },
            {
                field: 'Email',
                title: '邮箱',
                sortable: true

            }, {
                field: 'PhoneNumber',
                title: '联系电话',
                sortable: true

            }
            ]
        });
    }
    function ConstructQueryParams(param) {
        var params = {
            limit: param.limit, //页面大小
            offset: param.offset,//偏移数量
            page: param.offset / param.limit, //页码
            UserName: param.search
        };
        return params;
    }

    function InitModalEvent() {
        $('#useradd').on('show.bs.modal', function () {
            //打开事件
        });

        $('#useradd').on('hide.bs.modal', function () {
            // 关闭事件
            $("#divAddContainer").html("");

        })

        $('#useredit').on('show.bs.modal', function () {
            //打开事件
        });

        $('#useredit').on('hide.bs.modal', function () {
            // 关闭事件
            $("#divEditContainer").html("");

        })
    }

    function CloseAddScreen() {
        $('#useradd').modal('hide');

    }
    function CloseEditScreen() {
        $('#useredit').modal('hide');

    }

    function InitToolBarButton() {

        $("#btnAdd").click(function () {
            $('#useradd').modal('show');
            $("#divAddContainer").load("/User/User/Add");
        });

        $("#btnEdit").click(function () {

            var selections = $('#table').bootstrapTable('getSelections');
            if (selections.length == 0) {
                layer.alert("请选择要将要修改的数据", {
                    skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                });
                return;
            } else if (selections.length != 1) {
                layer.alert("只能选择一条数据进行修改", {
                    skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                });
                return;
            }
            
            
            if ('@isSystemAdmin' =="false"
                && selections[0].IsSystemAdmin)
            {
                layer.alert("对不起，您无权对系统管理员进行操作", {
                    skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                });
                return;

            }
            var id = selections[0].Id;
            $('#useredit').modal('show');
            $("#divEditContainer").load("/User/User/Edit?userId=" + id);

        });

        $("#btnDelete").click(function () {
            var selections = $('#table').bootstrapTable('getSelections');
            if (selections.length == 0) {
                layer.alert("请选择要将要删除的数据", {
                    skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                });
                return;
            }
            var contactIds = [];
            for (var i = 0; i < selections.length; i++) {
                var id = selections[i].Id;
                contactIds.push(id);

                if ('@isSystemAdmin' == "false"
                && selections[i].IsSystemAdmin) {
                    layer.alert("对不起，您无权对系统管理员进行操作", {
                        skin: 'layui-layer-molv'
                                , closeBtn: 0
                                , shift: 5 //动画类型
                    });
                    return;

                }

            }
            //delete records
            var jsonUserId = JSON.stringify(contactIds);
            $.ajax({
                type: "post",//使用get方法访问后台
                dataType: "json",//返回json格式的数据
                url: "/User/User/BachDeleteById",
                data: jsonUserId,
                async: false,
                success: function (message) {
                    if (message.Success) {
                        RefreshTable();
                    } else {
                        layer.alert(message.Content, {
                            skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                        });
                    }

                }
            });
        });
    }

    function RefreshTable() {
        $('#table').bootstrapTable('refresh');

    }

    function DicUserType(key)
    {
        var result = key;
        for (var i = 0; i < dicUserType.length; i++) {
            if (key == dicUserType[i].Key) {
                result = dicUserType[i].Value;
            }
        }
        return result;
    }

    function DicRoles(key) {
        var result = key;
        for (var i = 0; i < dicRoles.length; i++) {
            if (key == dicRoles[i].Key) {
                result = dicRoles[i].Value;
            }
        }
        return result;
    }
</script>    